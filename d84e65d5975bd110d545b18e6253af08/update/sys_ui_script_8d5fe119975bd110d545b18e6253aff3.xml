<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_376096_papro.approval_inject</name>
        <script><![CDATA[var x_376096_papro = x_376096_papro || {};
x_376096_papro.approval_inject = (function() {
	"use strict";
	/* global setTimeout */
	/* eslint no-undef: "error" */
	if (x_376096_papro.approval_inject) {
		return x_376096_papro.approval_inject;
	}
	
	var targetWidgets = [
		// '<Sys ID of Target Widget>', // [widget-id] <Target Widget Name> (<used page>)
		'29d9734ddb65c698d46e5117f3961921', // [] Approvals (approvals)
		'b0045a2fdbefa8109edc542af496198e', // [] Approval Info (approval)
		'0d4be14b87473300926420eac5cb0b6c', // [] CSM Approval Info (csm_approval)
		'69deca02675003004b8d794717415a9b', // [sc_request_and_approvals] Requests and Approvals (sc_landing)
	];
	
	setTimeout(function () {
		var $window = this;
		var cache = {};
		var observer = new $window.MutationObserver(function (mutations) {
			for (var i = 0; i < mutations.length; i++) {
				var mutation = mutations[i];
				if (mutation.addedNodes) {
					for (var j = 0; j < mutation.addedNodes.length; j++) {
						var node = mutation.addedNodes[j];
						if (node.classList && !node.classList.contains('papproval-injected')) {
							for (var k = 0; k < targetWidgets.length; k++) {
								if (node.classList.contains('v' + targetWidgets[k])) {
									node.classList.add('papproval-injected');
									new ApprovalInjector($window, node, cache);
									break;
								}
							}
						}
					}
				}
			}
		});
		
		observer.observe($window.document, {
			childList: true,
			subtree: true
		});
	});

	return {
		type: 'approval_inject'
	};
	
	function ApprovalInjector($window, node, cache) {
		var element = $window.angular.element(node);
		var $scope = element.scope();
		
		var $injector = element.injector();
		var $q = $injector.get('$q');
		var i18n = $injector.get('i18n');
		var $log = $injector.get('$log');
		var spUtil = $injector.get('spUtil');
		var spModal = $injector.get('spModal');
		var spUIActionsExecuter = $injector.get('spUIActionsExecuter');
		
		if (!('getConfig' in cache)) {
			cache['getConfig'] = (function () {
				var deferred = $q.defer();
				
				var ga = new $window.GlideAjax('PortalApprovalUtilClient').setScope('x_376096_papro');
				ga.addParam('sysparm_name', 'getConfig');
				ga.getXMLAnswer(function (answer) {
					try {
						if (answer) {
							deferred.resolve(JSON.parse(answer));
						} else {
							throw new Error('Failed to load Config');
						}
					} catch (e) {
						deferred.reject();

						$log.error(e, answer);
						if ($window.g_user_is_admin) {
							spUtil.addErrorMessage(e.message);
						}
					}
				});
				
				return function () {
					return deferred.promise;
				};
			})();
		}
		
		var approvalInProgress = false;
		var ESIGNATURE_PARAMS;
		var ESIGNATURE = {
			'approved': 'cbfe291147220100ba13a5554ee4904d',
			'rejected': '580f711147220100ba13a5554ee4904b'
		};
		
		var messageKeys = {
			'MODAL_TITLE_APPROVE': 'x_376096_papro_modal_title_approve',
			'MODAL_TITLE_REJECT': 'x_376096_papro_modal_title_reject',
			'MODAL_MESSAGE_MANDATORY': 'x_376096_papro_modal_message',
			'MODAL_MESSAGE_OPTIONAL': 'x_376096_papro_modal_message_optional',
			'MODAL_COMMENT_MANDATORY_ERROR': 'x_376096_papro_modal_comment_mandatory'
		};

		// pre-load the messages
		i18n.getMessages(Object.values(messageKeys), $window.angular.noop);
		
		$scope.approve = handleApproval.bind(this, 'approved');
		$scope.reject = handleApproval.bind(this, 'rejected');
		if ($scope.data.esignature) {
			ESIGNATURE_PARAMS = {
				username: $scope.data.esignature.username,
				userSysId: $scope.data.esignature.userSysId
			};
		}
		
		// only relevant for Widget 'Approval Info' (/sp?id=approval&sys_id=...)
		if ($scope.c) {
			$scope.c.action = function (action) {
				handleApproval(action, $scope.data.sys_id, $scope.data.esignature.e_sig_required);
			};
		}
		
		function handleApproval(action, sys_id, requireEsignatureApproval) {
			if (approvalInProgress) {
				return;
			}

			approvalInProgress = true;
			getApprovalComment(action).then(function (comment) {
				var deferred = $q.defer();

				if (requireEsignatureApproval) {
					var unregister = x_376096_papro.uibmodal_watcher.register(function () {
						unregister();
						deferred.reject();
					});
					
					spUIActionsExecuter.executeFormAction(ESIGNATURE[action], 'sysapproval_approver', sys_id, [{ name: 'comments', value: comment }] , '', ESIGNATURE_PARAMS).then(deferred.resolve, deferred.reject);
				} else {
					var ga = new $window.GlideAjax('PortalApprovalUtilClient').setScope('x_376096_papro');
					ga.addParam('sysparm_name', 'setApprovalState');
					ga.addParam('sys_id', sys_id);
					ga.addParam('state', action);
					ga.addParam('comment', comment);
					ga.getXMLAnswer(function (answer) {
						try {
							var result = JSON.parse(answer);
							if (result.status == 'success') {
								spUtil.update($scope);
								deferred.resolve();
							} else {
								spUtil.addErrorMessage(result.message);
								deferred.reject();
							}
						} catch (e) {
							deferred.reject();

							$log.error(e, answer);
							if ($window.g_user_is_admin) {
								spUtil.addErrorMessage(e.message);
							}
						}
					});
				}

				return deferred.promise;
			})['finally'](function () {
				approvalInProgress = false;
			});
		}
	
		function getApprovalComment(action) {
			var deferred = $q.defer();
			cache.getConfig().then(function (config) {
				var isApprove = action == 'approved';
				var commentRequired = isApprove ? config.approve_comment_mandatory : config.reject_comment_mandatory;
				if (!commentRequired && !config.always_confirm) {
					// no comment is required, the confirm popup is not desired
					deferred.resolve();
				} else {
					var modalTitle = isApprove ? messageKeys.MODAL_TITLE_APPROVE : messageKeys.MODAL_TITLE_REJECT;
					var modalMessage = commentRequired ? messageKeys.MODAL_MESSAGE_MANDATORY : messageKeys.MODAL_MESSAGE_OPTIONAL;
					var errorText = messageKeys.MODAL_COMMENT_MANDATORY_ERROR;
					i18n.getMessages([modalTitle, modalMessage, errorText], function (messages) {
						var inputOptions = {
							message: messages[modalMessage],
							text: '',
							textPlaceholder: '',
							required: commentRequired
						};

						spModal.open({
							title: messages[modalTitle],
							widget: 'x_376096_papro_prompt',
							shared: inputOptions,
							backdrop: false, // disable close by click
							onSubmit: function () {
								if (!inputOptions.required || inputOptions.text) {
									return $q.resolve({ status: true });
								}

								return $q.resolve({ status: false, errorMessage: messages[errorText] });
							}
						}).then(function () { deferred.resolve(inputOptions.text); }, deferred.reject);
					});
				}
			}, deferred.reject);

			return deferred.promise;
		}
	}
})();]]></script>
        <script_name>approval_inject</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-20 10:37:54</sys_created_on>
        <sys_id>8d5fe119975bd110d545b18e6253aff3</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>x_376096_papro.approval_inject</sys_name>
        <sys_package display_value="Portal Approval" source="x_376096_papro">d84e65d5975bd110d545b18e6253af08</sys_package>
        <sys_policy/>
        <sys_scope display_value="Portal Approval">d84e65d5975bd110d545b18e6253af08</sys_scope>
        <sys_update_name>sys_ui_script_8d5fe119975bd110d545b18e6253aff3</sys_update_name>
        <sys_updated_by>seto5001</sys_updated_by>
        <sys_updated_on>2024-05-07 16:42:51</sys_updated_on>
        <ui_type>1</ui_type>
        <use_scoped_format>true</use_scoped_format>
    </sys_ui_script>
</record_update>
